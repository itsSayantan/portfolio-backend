{"version":3,"sources":["webpack:///./src/pages/Post/Post.scss","webpack:///./src/pages/Post/Post.scss?e04d","webpack:///./images/back-button.svg","webpack:///./src/pages/Post/Post.tsx"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","api","content","__esModule","default","options","update","exported","locals","hot","accept","newContent","dispose","PostLoaderView","style","width","height","marginTop","ContentLoadingIndicator","props","dispatch","state","postID","history","useEffect","type","fetch","then","response","status","postNotFound","json","jsonData","jd","payload","data","error","console","log","AppContext","Consumer","appContext","isLoaderEnabled","AppState","mainLoader","enabled","postStyles","AppTheme","Post","postData","PostData","postContent","className","header","date","source","escapeHtml","MainLayout","PageTitle","to","color","pageTitle","fontSize","textDecoration","src","GlobalFooter"],"mappings":"8EAEAA,EADkC,EAAQ,GAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,EAAI,qeAAse,KAE/fD,EAAOH,QAAUA,G,oBCNjB,IAAIK,EAAM,EAAQ,IACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACH,EAAOC,EAAIE,EAAS,MAG9C,IAAIG,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEhBC,EAASL,EAAIC,EAASG,GAEtBE,EAAWL,EAAQM,OAASN,EAAQM,OAAS,GAI1CN,EAAQM,QACXT,EAAOU,IAAIC,OACT,KACA,WACE,IAAIC,EAAa,EAAQ,KAIO,iBAF1BA,EAAaA,EAAWR,WAAaQ,EAAWP,QAAUO,KAGxDA,EAAa,CAAC,CAACZ,EAAOC,EAAIW,EAAY,MAGxCL,EAAOK,MAKnBZ,EAAOU,IAAIG,SAAQ,WACjBN,OAIJP,EAAOH,QAAUW,G,8IC1CF,MAA0B,yBC0BnCM,G,OAAiB,WACnB,OACI,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASC,UAAW,SACrD,kBAACC,EAAA,EAAuB,MACxB,kBAACA,EAAA,EAAuB,MACxB,kBAACA,EAAA,EAAuB,SAwGrB,UAnGF,SAACC,GACJ,0BAASC,GAAP,EAAAC,MAAO,EAAAD,UACPE,EAAA,cAAAA,OACFC,EAAU,cAmChB,OAjCA,IAAMC,WAAU,WACZJ,EAAS,CAAEK,KAAM,MACjBC,MAAM,IAAsB,IAAMJ,GAC7BK,MAAK,SAAAC,GACF,OAAwB,MAApBA,EAASC,OACF,CACHC,cAAc,GAGfF,EAASG,UAEnBJ,MAAK,SAACK,G,QACH,GAAkC,QAA7B,EAAAA,SAA6B,eAAEF,aAEhCP,EAAQzB,KAAK,YACV,CAEH,IAAMmC,EAAKD,EAEXZ,EAAS,CACLK,KAAM,IACNS,QAAW,QAAJ,EAAED,SAAE,eAAEE,OAGjBf,EAAS,CAAEK,KAAM,UAGnB,OAAC,SAAAW,GACHC,QAAQC,IAAIF,GACZhB,EAAS,CAAEK,KAAM,WAE1B,IAGC,kBAACc,EAAA,EAAWC,SAAQ,MACf,SAACC,G,sCAEQC,EAAiC,QAAlB,EAD8B,QAA9B,EAAoB,QAApB,EAAa,QAAb,EAAGD,SAAU,eAAEpB,aAAK,eAAEsB,gBAAQ,eAAEC,kBACd,eAAEC,QAEnCC,EAAwB,QAAd,EAD+B,QAA9B,EAAoB,QAApB,EAAa,QAAb,EAAGL,SAAU,eAAEpB,aAAK,eAAE0B,gBAAQ,eAAEC,YACnB,eAAEF,WAC1BG,EAA4B,QAApB,EAAa,QAAb,EAAGR,SAAU,eAAEpB,aAAK,eAAE6B,SAE9BC,EAAcT,EAChB,kBAAC7B,EAAc,MAEf,yBAAKuC,UAAU,0BACX,yBAAKA,UAAU,eAAuB,QAAV,EAAEH,SAAQ,eAAEI,QACxC,yBAAKD,UAAU,aAAqB,QAAV,EAAEH,SAAQ,eAAEK,MACtC,kBAAC,IAAa,CACVC,OAAgB,QAAV,EAAEN,SAAQ,eAAE/C,QAClBsD,YAAY,KAKxB,OACI,oCACI,kBAACC,EAAA,EAAU,KACP,oCACI,yBAAKL,UAAU,gBACX,kBAACM,EAAA,EAAS,KACN,kBAAC,IAAI,CACDC,GAAG,IACH7C,MAAO,CACH8C,MACyB,QADpB,EACS,QADT,EACDd,SAAU,eAAEe,iBAAS,eACfD,MACVE,SACyB,QADjB,EACM,QADN,EACJhB,SAAU,eAAEe,iBAAS,eACfC,SACVC,eAAgB,SAGpB,yBAAKX,UAAU,2BACX,yBACIY,IAAK,EACLZ,UAAU,sC,UAMzBD,KAIb,kBAACc,EAAA,EAAY","file":"Post.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".post-wrapper{position:absolute;top:10px;left:5%;width:90%;margin-bottom:30px}.post-page-title-section{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.post-page-title-back-button-image{width:10px;height:10px;margin-right:10px}.post-content-container{width:100%;margin-top:20px}.post-header{text-align:center;font-size:1.8rem;font-family:'Odibee Sans', cursive}.post-date{text-align:center;margin-top:10px;margin-left:5px;font-size:12px;color:#666777}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js!./Post.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js!./Post.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js!./Post.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","export default __webpack_public_path__ + \"images/back-button.svg\";","import React from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\nimport MainLayout from '@Components/MainLayout/MainLayout';\nimport ContentLoadingIndicator from '@Components/shared/ContentLoadingIndicator/ContentLoadingIndicator';\nimport PageTitle from '@Components/PageTitle/PageTitle';\nimport GlobalFooter from '@Components/GlobalFooter/GlobalFooter';\n\nimport { AppContext } from '@Shared/contexts/AppContext';\nimport {\n    AppContextType,\n    PostNotFoundType,\n    PostDataResponseType\n} from '@Shared/types/others';\nimport {\n    getPostByIDEndpoint,\n    setPostDataAction,\n    enableMainLoaderAction,\n    disableMainLoaderAction\n} from '@Shared/constants';\n\nimport BackButton from '@Images/back-button.svg';\n\nimport './Post.scss';\n\nconst PostLoaderView = () => {\n    return (\n        <div style={{ width: '100%', height: '150px', marginTop: '10px' }}>\n            <ContentLoadingIndicator />\n            <ContentLoadingIndicator />\n            <ContentLoadingIndicator />\n        </div>\n    );\n};\n\nconst Post = (props: any) => {\n    const { state, dispatch } = React.useContext(AppContext) as AppContextType;\n    const { postID } = useParams();\n    const history = useHistory();\n\n    React.useEffect(() => {\n        dispatch({ type: enableMainLoaderAction });\n        fetch(getPostByIDEndpoint + '/' + postID)\n            .then(response => {\n                if (response.status === 404) {\n                    return {\n                        postNotFound: true\n                    };\n                }\n                return response.json();\n            })\n            .then((jsonData: PostDataResponseType | PostNotFoundType) => {\n                if ((jsonData as PostNotFoundType)?.postNotFound) {\n                    // redirect to the /404 page\n                    history.push('/404');\n                } else {\n                    // set the post data state\n                    const jd = jsonData as PostDataResponseType;\n\n                    dispatch({\n                        type: setPostDataAction,\n                        payload: jd?.data\n                    });\n\n                    dispatch({ type: disableMainLoaderAction });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch({ type: disableMainLoaderAction });\n            });\n    }, []);\n\n    return (\n        <AppContext.Consumer>\n            {(appContext: AppContextType) => {\n                const mainLoaderState = appContext?.state?.AppState?.mainLoader;\n                const isLoaderEnabled = mainLoaderState?.enabled;\n                const postContext = appContext?.state?.AppTheme?.Post;\n                const postStyles = postContext?.postStyles;\n                const postData = appContext?.state?.PostData;\n\n                const postContent = isLoaderEnabled ? (\n                    <PostLoaderView />\n                ) : (\n                    <div className=\"post-content-container\">\n                        <div className=\"post-header\">{postData?.header}</div>\n                        <div className=\"post-date\">{postData?.date}</div>\n                        <ReactMarkdown\n                            source={postData?.content}\n                            escapeHtml={false}\n                        />\n                    </div>\n                );\n\n                return (\n                    <>\n                        <MainLayout>\n                            <>\n                                <div className=\"post-wrapper\">\n                                    <PageTitle>\n                                        <Link\n                                            to=\"/\"\n                                            style={{\n                                                color:\n                                                    postStyles?.pageTitle\n                                                        ?.color,\n                                                fontSize:\n                                                    postStyles?.pageTitle\n                                                        ?.fontSize,\n                                                textDecoration: 'none'\n                                            }}\n                                        >\n                                            <div className=\"post-page-title-section\">\n                                                <img\n                                                    src={BackButton}\n                                                    className=\"post-page-title-back-button-image\"\n                                                />\n                                                Home\n                                            </div>\n                                        </Link>\n                                    </PageTitle>\n                                    {postContent}\n                                </div>\n                            </>\n                        </MainLayout>\n                        <GlobalFooter />\n                    </>\n                );\n            }}\n        </AppContext.Consumer>\n    );\n};\n\nexport default Post;\n"],"sourceRoot":""}